#include <TinyGPSPlus.h>
#include <Adafruit_TinyUSB.h> // For Serial

// Initialize the TinyGPSPlus object
TinyGPSPlus gps;

void setup() 
{
    delay(100); // Wait for power on grove 

    // Initializes the debug output  
    Serial.begin(115200);
    while (!Serial) delay(100); // Wait for it to be ready

    Serial1.begin(9600);  // GPS communicates at 9600 baud
    delay(1000);          // Delay to initialize

    Serial.println("GPS Hardware Serial initialized...");
}

void loop() 
{
    // Read data from GPS module
    while (Serial1.available() > 0) {
        char c = Serial1.read();  // Read character from GPS

        // Feed the character to TinyGPSPlus for parsing
        gps.encode(c);
    }

    // Display GPS info every second if new data is available
    static unsigned long lastDisplay = 0;
    if (millis() - lastDisplay > 1000) {
        lastDisplay = millis();
        displayInfo();
    }
}

void displayInfo()
{
    Serial.println("=====================================");

    // Print date and time data
    if (gps.date.isValid() && gps.time.isValid()) {
        Serial.print("Date: ");
        if (gps.date.day() < 10) Serial.print('0');
        Serial.print(gps.date.day());
        Serial.print("/");
        if (gps.date.month() < 10) Serial.print('0');
        Serial.print(gps.date.month());
        Serial.print("/");
        Serial.print(gps.date.year());

        Serial.print("  Time: ");
        if (gps.time.hour() < 10) Serial.print('0');
        Serial.print(gps.time.hour());
        Serial.print(":");
        if (gps.time.minute() < 10) Serial.print('0');
        Serial.print(gps.time.minute());
        Serial.print(":");
        if (gps.time.second() < 10) Serial.print('0');
        Serial.print(gps.time.second());
        Serial.println(" UTC");
    } else {
        Serial.println("Date/Time: INVALID");
    }

    // Print location data
    if (gps.location.isValid()) {
        Serial.print("Latitude: ");
        Serial.print(gps.location.lat(), 6);
        Serial.println("°");

        Serial.print("Longitude: ");
        Serial.print(gps.location.lng(), 6);
        Serial.println("°");
    } else {
        Serial.println("Location: INVALID");
    }

    // Print altitude if available
    if (gps.altitude.isValid()) {
        Serial.print("Altitude: ");
        Serial.print(gps.altitude.meters());
        Serial.println(" meters");
    } else {
        Serial.println("Altitude: INVALID");
    }

    // Print speed if available
    if (gps.speed.isValid()) {
        Serial.print("Speed: ");
        Serial.print(gps.speed.kmph());
        Serial.println(" km/h");
    } else {
        Serial.println("Speed: INVALID");
    }

    // Print number of satellites
    if (gps.satellites.isValid()) {
        Serial.print("Satellites: ");
        Serial.println(gps.satellites.value());
    } else {
        Serial.println("Satellites: INVALID");
    }
}
