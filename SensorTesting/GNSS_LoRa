// Includes

#include <Arduino.h>
#include <Wire.h>
#include <SensirionI2CSht4x.h> 

#include <LbmWm1110.hpp>
#include <Lbmx.hpp>

#include <Lbm_Modem_Common.hpp>
#include <WM1110_Geolocation.hpp>
#include <WM1110_BLE.hpp>
#include <WM1110_Storage.hpp>
#include <WM1110_At_Config.hpp>
#include <Tracker_Peripheral.hpp>

////////////////////////////////////////////////////////////////////////////////
// Custom join network code

uint8_t devEui[SMTC_MODEM_EUI_LENGTH] = {0x2C, 0xF7, 0xF1, 0xF0, 0x54, 0x70, 0x00, 0x47};
uint8_t joinEui[SMTC_MODEM_EUI_LENGTH] = {0x36, 0xB8, 0x07, 0x24, 0x6E, 0xD4, 0x85, 0x85};
uint8_t nwkKey[SMTC_MODEM_KEY_LENGTH] = {0xDF, 0x54, 0xC9, 0x75, 0x73, 0xC0, 0xE3, 0xB4, 0xBC, 0x2D, 0x25, 0x75, 0x71, 0x8B, 0xE9, 0x8A};

// Custom region for the US
smtc_modem_region_t modem_region = SMTC_MODEM_REGION_US_915;

// Set an execution period
static constexpr uint32_t EXECUTION_PERIOD = 1000;    // [msec.]
// Set sensor measurement period
static constexpr uint32_t SENSOR_MEASUREMENT_PERIOD = 60;    // [min.]

// Instance
static WM1110_Geolocation& wm1110_geolocation = WM1110_Geolocation::getInstance();

// Declare the SHT4x sensor object
SensirionI2CSht4x sht4x;

// Sensor measurement
uint32_t start_sensor_read_time = 0; 
uint32_t sensor_read_period = 0; 

// Packed buf & size
uint8_t sensor_data_buf[64] = {0};
uint8_t sensor_data_size = 0;

// Sensor data
float temperature; 
float humidity;

////////////////////////////////////////////////////////////////////////////////
// setup and loop

void setup()
{
    Serial.begin(115200); // Start the serial communication
    delay(100); // Wait for power on grove 

    Wire.begin();

    // Initializes the SHT4x sensor
    sht4x.begin(Wire);
    Serial.println("SHT4x sensor initialized.");

    // Set the location mode to GNSS and uplink the data to other platform
    wm1110_geolocation.begin(Track_Scan_Gps, false);
    Serial.println("LoRaWAN modem initialized.");

    wm1110_geolocation.setCustomJoinNetworkCode(devEui, joinEui, nwkKey); // Set custom join network code 
    wm1110_geolocation.setCustomRegion(modem_region); // Set custom region 
    wm1110_geolocation.setCustomTrackPeriod(3); // Set custom period for positioning

    wm1110_geolocation.setSensorMeasurementPeriod(SENSOR_MEASUREMENT_PERIOD);
    sensor_read_period = wm1110_geolocation.getSensorMeasurementPeriod();    // Get period for reading sensor data
    sensor_read_period = sensor_read_period * 60 * 1000;  // Convert to ms

    // Start running
    wm1110_geolocation.run();
    Serial.println("Device setup complete.");
}

void loop()
{
    uint32_t now_time = smtc_modem_hal_get_time_in_ms();

    // Run LoRaWAN process
    uint32_t sleepTime = wm1110_geolocation.lbmxProcess();
    Serial.println("LoRaWAN process running.");

    // Light action for Join 
    wm1110_geolocation.modemLedActionProcess();

    if (now_time - start_sensor_read_time > sensor_read_period || start_sensor_read_time == 0)
    {
        // Read sensor data
        tracker_peripheral.measureSHT4xDatas(&temperature, &humidity);
        Serial.print("Temperature: ");
        Serial.print(temperature);
        Serial.print(" Â°C, Humidity: ");
        Serial.print(humidity);
        Serial.println(" %");

        // Pack the sensor data into a buffer
        sensor_data_size = 0; // Reset the size for the new payload
        sensor_data_buf[sensor_data_size++] = (int16_t)(temperature * 100) >> 8; // Temperature MSB
        sensor_data_buf[sensor_data_size++] = (int16_t)(temperature * 100) & 0xFF; // Temperature LSB
        sensor_data_buf[sensor_data_size++] = (int16_t)(humidity * 100) >> 8; // Humidity MSB
        sensor_data_buf[sensor_data_size++] = (int16_t)(humidity * 100) & 0xFF; // Humidity LSB

        // Insert all sensor data into LoRaWAN transmission queue
        wm1110_geolocation.insertIntoTxQueue(sensor_data_buf, sensor_data_size);
        Serial.println("Data inserted into LoRaWAN queue.");

        // Update the sensor read time
        start_sensor_read_time = now_time;
    }

    delay(min(sleepTime, EXECUTION_PERIOD));
}
